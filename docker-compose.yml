version: '3.8'

services:

  web:
    image: nginx:stable-alpine
    restart: unless-stopped
    container_name: ${SITE}-web
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - wp_data:/var/www/html
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

  wordpress:
    depends_on:
      - db
    container_name: ${SITE}-wp
    build:
      dockerfile: ./wordpress/Dockerfile
      context: .      
    volumes:
      - wp_data:/var/www/html
      

    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}

  wp-cli:
    depends_on:
      - wordpress
    container_name: ${SITE}-cli
    image: wordpress:cli-php8.1
    init: true
    command: [ /start.sh ]
    volumes:
      - wp_data:/var/www/html
      - ./wp-cli/start.sh:/start.sh
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WEB_PORT: ${WEB_PORT}
      NEW_SITE_NAME: ${NEW_SITE_NAME:-http://localhost}

  db:
    image: mariadb:10.6
    container_name: ${SITE}-db
    restart: unless-stopped
    env_file: .env
    volumes:
      - db_data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    expose:
      - 3306
    #    ports:
    #     - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}

volumes:
  db_data:
  wp_data:
